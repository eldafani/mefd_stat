if(length(url_ind)==1) {
df <- read.csv2(url(url_ind))
} else
df <- lapply(url_ind, function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
df <- lapply(url_vec, function(x) read.csv2(url(x)))
names(df) <- mefd_name(url_web=url_web, config = conf)
return(df)
}
}
df <- mefd_read(idserie = 11109)
meta_mefd$indicator[meta_mefd$idserie %in% 11109]
View(meta_mefd)
mefd_read <- function(idserie = NULL, url_ind = NULL, url_web = NULL, config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
if(length(idserie)==1) {
df <- cbind(read.csv2(url(meta_mefd$url[meta_mefd$idserie %in% idserie])),
indicator = meta_mefd$indicador[meta_mefd$idserie %in% idserie])
} else
df <- lapply(meta_mefd$url[meta_mefd$idserie %in% idserie],
function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- read.csv2(url(url_ind))
} else
df <- lapply(url_ind, function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
df <- lapply(url_vec, function(x) read.csv2(url(x)))
names(df) <- mefd_name(url_web=url_web, config = conf)
return(df)
}
}
df <- mefd_read(idserie = 11109)
View(df)
View(df)
mefd_read <- function(idserie = NULL, url_ind = NULL, url_web = NULL, config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
if(length(idserie)==1) {
df <- cbind(read.csv2(url(meta_mefd$url[meta_mefd$idserie %in% idserie])),
indicador = meta_mefd$indicador[meta_mefd$idserie %in% idserie])
} else
df <- lapply(meta_mefd$url[meta_mefd$idserie %in% idserie],
function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- read.csv2(url(url_ind))
} else
df <- lapply(url_ind, function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
df <- lapply(url_vec, function(x) read.csv2(url(x)))
names(df) <- mefd_name(url_web=url_web, config = conf)
return(df)
}
}
df <- mefd_read(idserie = 11109)
View(df)
class(df)
mefd_read <- function(idserie = NULL, url_ind = NULL, url_web = NULL, config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
if(length(idserie)==1) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
df <- cbind(read.csv2(url(mimeta$url)), indicador = mimeta$indicador)
} else
df <- lapply(meta_mefd$url[meta_mefd$idserie %in% idserie],
function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- read.csv2(url(url_ind))
} else
df <- lapply(url_ind, function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
df <- lapply(url_vec, function(x) read.csv2(url(x)))
names(df) <- mefd_name(url_web=url_web, config = conf)
return(df)
}
}
df <- mefd_read(idserie = 11109)
View(df)
seq_along(nrow(meta_mefd))
seq_along(1:nrow(meta_mefd))
1:nrow(meta_mefd)
View(meta_mefd)
mefd_read <- function(idserie = NULL, url_ind = NULL, url_web = NULL, config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- cbind(read.csv2(url(mimeta$url)), indicador = mimeta$indicador)
} else
df <- lapply(1:nrow(mimeta), function(x)
cbind(read.csv2(url(mimeta$url[[x]])), indicador =  mimeta$indicador[[x]]))
names(df) <- mimeta$archivo
return(df)
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- read.csv2(url(url_ind))
} else
df <- lapply(url_ind, function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
df <- lapply(url_vec, function(x) read.csv2(url(x)))
names(df) <- mefd_name(url_web=url_web, config = conf)
return(df)
}
}
df <- mefd_read(idserie = 11109)
View(df)
View(df)
df <- mefd_read(idserie = 11109)
View(df)
mefd_read <- function(idserie = NULL, url_ind = NULL, url_web = NULL, config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- cbind(read.csv2(url(mimeta$url)), indicador = mimeta$indicador)
} else
df <- lapply(1:nrow(mimeta), function(x)
cbind(read.csv2(url(mimeta$url[[x]])), indicador =  mimeta$indicador[[x]]))
names(df) <- mimeta$archivo
} return(df)
mefd_read <- function(idserie = NULL, url_ind = NULL, url_web = NULL, config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- cbind(read.csv2(url(mimeta$url)), indicador = mimeta$indicador)
} else {
df <- lapply(1:nrow(mimeta), function(x)
cbind(read.csv2(url(mimeta$url[[x]])), indicador =  mimeta$indicador[[x]]))
names(df) <- mimeta$archivo
}
return(df)
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- read.csv2(url(url_ind))
} else
df <- lapply(url_ind, function(x) read.csv2(url(x)))
return(df)
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
df <- lapply(url_vec, function(x) read.csv2(url(x)))
names(df) <- mefd_name(url_web=url_web, config = conf)
return(df)
}
}
df <- mefd_read(idserie = 11109)
View(df)
df <- mefd_read(idserie = c(11109, 11125, 37002))
names(df)
df[[1]]
View(df[[1]])
View(df[[2]])
View(df[[3]])
View(meta_mefd)
#' Descarga datos de indicadores
#' @export
#' @description
#' Descarga bases de datos (.csv) de indicadores a partir de id de la serie (idserie),
#' página web (url_web) o url de .csv (url_ind). El usuaRio debe eligir solo un método.
#'
#' @param idserie id de la serie en el archivo de metadatos (meta_mefd)
#' @param url_ind url(s) de la bases de datos (.csv) del indicador
#' @param url_web url de página web del MEFD con lista de indicadores
#' @param folder directorio donde guardar los datos
#' @param config lista con parámetros de configuración (default)
#' @return data.frame o lista de data.frames con datos de indicadores
#' @importFrom rvest html_attr html_elements html_text read_html
#' @importFrom stringr str_match
#' @importFrom utils read.csv2 download.file
#'
#' @examples
#' \donttest{
#' mi_folder <- "/home/datos"
#' mi_url <- paste0("https://estadisticas.educacion.gob.es/EducaDynPx/",
#' "educabase/index.htm?type=pcaxis&path=/no-universitaria/centros/",
#' "centrosyunid/series/unidades_esc&file=pcaxis&l=s0")
#'
#' # Descarga desde página web (url_web)
#' mefd_down(mi_url, folder = mi_folder)
#'
#' # Descarga un indicador específico a partir de url del .csv (url_ind)
#' mefd_down(url_ind = meta_mefd$url[190], folder = mi_folder)
#'
#' # Descarga varios indicadores a partir del url del .csv (url_ind)
#' mefd_down(url_ind=meta_mefd$url[c(1, 5, 17)], folder = mi_folder)
#' }
mefd_down <- function(idserie = NULL, url_ind = NULL, url_web = NULL, folder = tempdir(), config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- download.file(url = mimeta$url, destfile = file.path(folder, mimeta$archivo))
} else {
df <- lapply(1:nrow(mimeta), function(x) download.file(url = mimeta$surl[[x]],
destfile = file.path(folder, mimeta$archivo[[x]])))
}
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- download.file(url = url_ind, destfile = file.path(folder, "datos.csv"))
} else
df <- lapply(seq_along(url_ind), function(x) download.file(url = url_ind[[x]],
destfile = file.path(folder, paste("datos_", x, ".csv"))))
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
name_vec <- mefd_name(url_web=url_web, config = conf)
df <- lapply(seq_along(url_vec), function(x) download.file(url = url_vec[[x]],
destfile = file.path(folder, name_vec[[x]])))
}
}
mefd_down(idserie = 11109, folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/")
mefd_down(idserie = 11109, folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down(idserie = c(11109, 11125, 37002), folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down <- function(idserie = NULL, url_ind = NULL, url_web = NULL, folder = tempdir(), config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- download.file(url = mimeta$url, destfile = file.path(folder, mimeta$archivo))
} else {
df <- lapply(1:nrow(mimeta), function(x) download.file(url = mimeta$url[[x]],
destfile = file.path(folder, mimeta$archivo[[x]])))
}
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- download.file(url = url_ind, destfile = file.path(folder, "datos.csv"))
} else
df <- lapply(seq_along(url_ind), function(x) download.file(url = url_ind[[x]],
destfile = file.path(folder, paste("datos_", x, ".csv"))))
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
name_vec <- mefd_name(url_web=url_web, config = conf)
df <- lapply(seq_along(url_vec), function(x) download.file(url = url_vec[[x]],
destfile = file.path(folder, name_vec[[x]])))
}
}
mefd_down(idserie = 11109, folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down(idserie = c(11109, 11125, 37002), folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down <- function(idserie = NULL, url_ind = NULL, url_web = NULL, folder = tempdir(), config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- download.file(url = mimeta$url, destfile = file.path(folder, "datos.csv"))
} else {
df <- lapply(1:nrow(mimeta), function(x) download.file(url = mimeta$url[[x]],
destfile = file.path(folder, paste("datos_", x, ".csv"))))
}
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- download.file(url = url_ind, destfile = file.path(folder, "datos.csv"))
} else
df <- lapply(seq_along(url_ind), function(x) download.file(url = url_ind[[x]],
destfile = file.path(folder, paste("datos_", x, ".csv"))))
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
name_vec <- mefd_name(url_web=url_web, config = conf)
df <- lapply(seq_along(url_vec), function(x) download.file(url = url_vec[[x]],
destfile = file.path(folder, name_vec[[x]])))
}
}
df <- mefd_read(idserie = 11109)
mefd_down(idserie = 11109, folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down(idserie = c(11109, 11125, 37002), folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
View(meta_mefd)
mefd_down <- function(idserie = NULL, url_ind = NULL, url_web = NULL, folder = tempdir(), config = conf) {
### Error si indican más de un método o ninguno
if(sum(!sapply(list(idserie, url_ind, url_web), is.null)) != 1) {
message("You need to supply one argument only: 'idserie', 'url_ind', or 'url_web'")
return(NULL)
}
### Lee datos con idserie
if(!is.null(idserie)) {
mimeta <- meta_mefd[meta_mefd$idserie %in% idserie, ]
if(length(idserie)==1) {
df <- download.file(url = mimeta$url,
destfile = file.path(folder, paste0(mimeta$idserie, ".csv")))
} else {
df <- lapply(1:nrow(mimeta), function(x) download.file(url = mimeta$url[[x]],
destfile = file.path(folder, paste0(mimeta$idserie[[x]], ".csv"))))
}
}
### Lee datos con url de la .csv (sin nombrar)
if(!is.null(url_ind)) {
if(length(url_ind)==1) {
df <- download.file(url = url_ind, destfile = file.path(folder, "datos.csv"))
} else
df <- lapply(seq_along(url_ind), function(x) download.file(url = url_ind[[x]],
destfile = file.path(folder, paste("datos_", x, ".csv"))))
}
### Lee datos con url de la pagina web (nombrando)
if(!is.null(url_web)) {
url_vec <- mefd_url(url_web=url_web, config = conf)
name_vec <- mefd_name(url_web=url_web, config = conf)
df <- lapply(seq_along(url_vec), function(x) download.file(url = url_vec[[x]],
destfile = file.path(folder, name_vec[[x]])))
}
}
df <- mefd_read(idserie = 11109)
mefd_down(idserie = 11109, folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down(idserie = c(11109, 11125, 37002), folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
library(roxygen2)
roxygen2::roxygenise()
remove.packages("mefdind")
library("devtools")
check()
library(roxygen2)
roxygen2::roxygenise()
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
library(mefdind)
library(roxygen2)
roxygen2::roxygenise()
meta_mefd
View(meta_mefd)
library(roxygen2)
roxygen2::roxygenise()
par_url
View(par_url)
View(par_url)
par_url
glimpse(par_url)
library(tidyverse)
glimpse(par_url)
head(par_url)
meta_mefd
View(meta_mefd)
meta_list <- lapply(par_url$url, mefd_meta)
meta_df <- do.call(bind_rows, meta_list)
View(meta_df)
View(meta_df)
head(par_url)
View(par_url)
View(meta_df)
View(meta_df)
View(par_url)
View(meta_df)
meta_list <- lapply(par_url$url, mefd_meta)
meta_mefd <- do.call(bind_rows, meta_list)
View(meta_mefd)
View(par_url)
conf
library(tidyverse)
library(mefdind)
df <- mefd_read(idserie = 11109)
head(df)
mefd_search("idoneidad")
mefd_search("primaria.*sexo")
mefd_search("idoneidad")
mefd_search("idoneidad")$idserie
filter(meta_mefd, idserie == 11109)
meta_mefd %>% filter(idserie == 11109) %>% select(indicador)
meta_mefd %>% filter(idserie == 11109)
class(meta_mefd)
class(meta_mefd$indicador)
class(meta_mefd$titulo_1)
class(meta_mefd$idserie)
meta_mefd[meta_mefd$idserie == 11109, "indicador"]
meta_mefd %>% filter(idserie == 11109)
meta_mefd %>% filter(idserie == 11109) %>% select(indicador)
as.data.frame(meta_mefd) %>% filter(idserie == 11109) %>% select(indicador)
dir <- "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/work/"
par_url <- read.csv(file.path(dir, "par_url.csv"))
meta_list <- lapply(par_url$url, mefd_meta)
# names(meta_list) <- par_url$url
# meta_df <- do.call(bind_rows, meta_list, .id = "")
meta_df <- do.call(bind_rows, meta_list)
par_url_rep <- par_url[rep(seq_len(nrow(par_url)), sapply(meta_list, nrow)), paste0("titulo_", 1:3)]
meta_mefd <- cbind(meta_df, par_url_rep, row.names =  NULL)
meta_mefd <-  meta_mefd %>%
mutate(idserie = 10000*as.numeric(factor(titulo_1, levels = unique(titulo_1))) +
1000*as.numeric(factor(titulo_2, levels = unique(titulo_2))) +
100*as.numeric(factor(titulo_3, levels = unique(titulo_3)))) %>%
group_by_at(paste0("titulo_", 1:3)) %>%
mutate(idserie = idserie + row_number())
class(meta_mefd)
meta_mefd <- as.data.frame(meta_mefd)
class(meta_mefd)
glimpse(meta_mefd)
View(meta_mefd)
#length(unique(meta_mefd$idserie))
dir <- "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/package/data/"
save(meta_mefd, par_url, file = file.path(dir, "meta.rda"))
remove.packages("medfind")
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
library(tidyverse)
library(mefdind)
meta_mefd
View(meta_mefd)
meta_mefd$indicador[16]
View(meta_mefd)
meta_mefd %>%
filter(idserie == 11116) %>%
select(indicador)
meta_mefd %>%
filter(idserie == 11116) %>%
select(indicador)
class(meta_mefd)
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
class(mefd_meta)
class(meta_mefd)
library("mefdind")
class(meta_mefd)
mi_url <-"https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-porcen-gen&file=pcaxis&l=s0"
df_meta <- mefd_meta(url_web = mi_url)
glimpse(df_meta)
library("tidyverse")
glimpse(df_meta)
View(df_meta)
head(df_meta)
head(par_url)
library(roxygen2)
roxygen2::roxygenise()
