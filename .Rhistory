mefd_down(idserie = 11109, folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
mefd_down(idserie = c(11109, 11125, 37002), folder = "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/")
library(roxygen2)
roxygen2::roxygenise()
remove.packages("mefdind")
library("devtools")
check()
library(roxygen2)
roxygen2::roxygenise()
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
library(mefdind)
library(roxygen2)
roxygen2::roxygenise()
meta_mefd
View(meta_mefd)
library(roxygen2)
roxygen2::roxygenise()
par_url
View(par_url)
View(par_url)
par_url
glimpse(par_url)
library(tidyverse)
glimpse(par_url)
head(par_url)
meta_mefd
View(meta_mefd)
meta_list <- lapply(par_url$url, mefd_meta)
meta_df <- do.call(bind_rows, meta_list)
View(meta_df)
View(meta_df)
head(par_url)
View(par_url)
View(meta_df)
View(meta_df)
View(par_url)
View(meta_df)
meta_list <- lapply(par_url$url, mefd_meta)
meta_mefd <- do.call(bind_rows, meta_list)
View(meta_mefd)
View(par_url)
conf
library(tidyverse)
library(mefdind)
df <- mefd_read(idserie = 11109)
head(df)
mefd_search("idoneidad")
mefd_search("primaria.*sexo")
mefd_search("idoneidad")
mefd_search("idoneidad")$idserie
filter(meta_mefd, idserie == 11109)
meta_mefd %>% filter(idserie == 11109) %>% select(indicador)
meta_mefd %>% filter(idserie == 11109)
class(meta_mefd)
class(meta_mefd$indicador)
class(meta_mefd$titulo_1)
class(meta_mefd$idserie)
meta_mefd[meta_mefd$idserie == 11109, "indicador"]
meta_mefd %>% filter(idserie == 11109)
meta_mefd %>% filter(idserie == 11109) %>% select(indicador)
as.data.frame(meta_mefd) %>% filter(idserie == 11109) %>% select(indicador)
dir <- "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/work/"
par_url <- read.csv(file.path(dir, "par_url.csv"))
meta_list <- lapply(par_url$url, mefd_meta)
# names(meta_list) <- par_url$url
# meta_df <- do.call(bind_rows, meta_list, .id = "")
meta_df <- do.call(bind_rows, meta_list)
par_url_rep <- par_url[rep(seq_len(nrow(par_url)), sapply(meta_list, nrow)), paste0("titulo_", 1:3)]
meta_mefd <- cbind(meta_df, par_url_rep, row.names =  NULL)
meta_mefd <-  meta_mefd %>%
mutate(idserie = 10000*as.numeric(factor(titulo_1, levels = unique(titulo_1))) +
1000*as.numeric(factor(titulo_2, levels = unique(titulo_2))) +
100*as.numeric(factor(titulo_3, levels = unique(titulo_3)))) %>%
group_by_at(paste0("titulo_", 1:3)) %>%
mutate(idserie = idserie + row_number())
class(meta_mefd)
meta_mefd <- as.data.frame(meta_mefd)
class(meta_mefd)
glimpse(meta_mefd)
View(meta_mefd)
#length(unique(meta_mefd$idserie))
dir <- "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/package/data/"
save(meta_mefd, par_url, file = file.path(dir, "meta.rda"))
remove.packages("medfind")
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
library(tidyverse)
library(mefdind)
meta_mefd
View(meta_mefd)
meta_mefd$indicador[16]
View(meta_mefd)
meta_mefd %>%
filter(idserie == 11116) %>%
select(indicador)
meta_mefd %>%
filter(idserie == 11116) %>%
select(indicador)
class(meta_mefd)
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
class(mefd_meta)
class(meta_mefd)
library("mefdind")
class(meta_mefd)
mi_url <-"https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-porcen-gen&file=pcaxis&l=s0"
df_meta <- mefd_meta(url_web = mi_url)
glimpse(df_meta)
library("tidyverse")
glimpse(df_meta)
View(df_meta)
head(df_meta)
head(par_url)
library(roxygen2)
roxygen2::roxygenise()
library("mefdind")
mi_folder <- "/home/eldani/MEGA/Work/Projects/Ongoing/mefdind/temp/"
mefd_down(idserie = c(11109, 11125, 37002), folder = mi_folder)
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/centros/sice/series&file=pcaxis&l=s0"
mefd_url(mi_url)
mi_url <-"https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/centros/centrosyunid/series/unidades_esc&file=pcaxis&l=s0"
df <- mefd_meta(url_web = mi_url)
View(df)
library(mefdind)
head(par_url)
conf
library("mefdind")
help(mefd_read)
# enlace url con indicadores
mi_url <-"https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/centros/centrosyunid/series/unidades_esc&file=pcaxis&l=s0"
# mefd_read con argumento url_web
df <- mefd_read(url_web = mi_url)
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-repetidores&file=pcaxis&l=s0"
# mefd_read con argumento url_web
df <- mefd_read(url_web = mi_url)
names(df)
help(mefd_meta)
mefd_meta(url_web = mi_url)
help("mefd_name")
mefd_name(url_web = mi_url)
mefd_url(url_web = mi_url)
mefd_meta(url_web = mi_url)
# enlace url con indicadores
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-repetidores&file=pcaxis&l=s0"
mefd_meta(url_web = mi_url)
url_web = mi_url
pg <- read_html(url_web)
library("rvest")
url_web = mi_url
pg <- read_html(url_web)
pg
### Titulo de la pagina web
tit <- rvest::html_elements(pg, "h1")
tit
tit <- trimws(rvest::html_text(tit))
tit
### Nodos <a
pg_a <- rvest::html_elements(pg, "a")
pg_a
### Titulo de base de datos del indicador
tit_ind <- sapply(pg_a, function(x) stringr::str_match(as.character(x), conf$tit_p)[,2])
tit_ind
tit_ind <- unique(tit_ind[!is.na(tit_ind)])
tit_ind
### Lee atributos 'href'(ruta de la tabla)
href <- rvest::html_attr(pg_a, "href")
href
href <- href[!is.na(href)]
href
href <- href[nchar(href)>1]
href
href <- grep(conf$tabpx, href, value = TRUE)
href
### Extrae nombre del archivo .csv
file <- unique(stringr::str_match(href, conf$file_p)[,2])
file
file <- file[!is.na(file)]
file
file <- paste0(file, ".csv")
file
### Genera url para .csv
url_3 <- paste0(unique(stringr::str_match(href, conf$pre_p)[,2]), "/")
base_url <- paste0(conf$url_1, conf$url_2, url_3)
myurl <- paste0(base_url, file, conf$suf_url)
myurl
file
### Nombre de archivos .csv
file <- mefd_name(url_web=url_web, config = conf)
file
myurl <- mefd_url(url_web=url_web)
myurl
tit_ind
file
myurl
tit
### tibble metadata
df <- data.frame(tit_ind, file, myurl, tit)
cbind(tit_ind, file, myurl, tit)
url_web = mi_url
pg <- read_html(url_web)
### Titulo de la pagina web
tit <- rvest::html_elements(pg, "h1")
tit <- trimws(rvest::html_text(tit))
### Nodos <a
pg_a <- rvest::html_elements(pg, "a")
### Titulo de base de datos del indicador
tit_ind <- sapply(pg_a, function(x) stringr::str_match(as.character(x), conf$tit_p)[,2])
tit_ind <- unique(tit_ind[!is.na(tit_ind)])
### Lee atributos 'href'(ruta de la tabla)
href <- rvest::html_attr(pg_a, "href")
href <- href[!is.na(href)]
href <- href[nchar(href)>1]
href <- grep(conf$tabpx, href, value = TRUE)
### Genera url para .csv
url_3 <- paste0(unique(stringr::str_match(href, conf$pre_p)[,2]), "/")
base_url <- paste0(conf$url_1, conf$url_2, url_3)
myurl <- paste0(base_url, file, conf$suf_url)
### Nombre de archivos .csv
file <- mefd_name(url_web=url_web, config = conf)
myurl <- mefd_url(url_web=url_web)
tit_ind
file
myurl
tit
### tibble metadata
df <- data.frame(tit_ind, file, myurl, tit)
help(data.frame)
help(cbind)
rbind(tit_ind, file, myurl, tit)
rbind(tit_ind, file, myurl, tit)
tit_ind
class(tit_ind)
file
myurl
tit
# enlace url con indicadores
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-porcen-gen&file=pcaxis&l=s0"
# mefd_read con argumento url_web
df <- mefd_read(url_web = mi_url)
names(df)
mefd_meta(url_web = mi_url)
mi_meta <- mefd_meta(url_web = mi_url)
View(mi_meta)
View(mi_meta)
names(df)
url_web = mi_url
pg <- read_html(url_web)
### Titulo de la pagina web
tit <- rvest::html_elements(pg, "h1")
tit <- trimws(rvest::html_text(tit))
### Nodos <a
pg_a <- rvest::html_elements(pg, "a")
### Titulo de base de datos del indicador
tit_ind <- sapply(pg_a, function(x) stringr::str_match(as.character(x), conf$tit_p)[,2])
tit_ind <- unique(tit_ind[!is.na(tit_ind)])
### Lee atributos 'href'(ruta de la tabla)
href <- rvest::html_attr(pg_a, "href")
href <- href[!is.na(href)]
href <- href[nchar(href)>1]
href <- grep(conf$tabpx, href, value = TRUE)
### Extrae nombre del archivo .csv
file <- unique(stringr::str_match(href, conf$file_p)[,2])
file <- file[!is.na(file)]
file <- paste0(file, ".csv")
### Genera url para .csv
url_3 <- paste0(unique(stringr::str_match(href, conf$pre_p)[,2]), "/")
base_url <- paste0(conf$url_1, conf$url_2, url_3)
myurl <- paste0(base_url, file, conf$suf_url)
file
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-repetidores&file=pcaxis&l=s0"
url_web = mi_url
pg <- read_html(url_web)
### Titulo de la pagina web
tit <- rvest::html_elements(pg, "h1")
tit <- trimws(rvest::html_text(tit))
### Nodos <a
pg_a <- rvest::html_elements(pg, "a")
### Titulo de base de datos del indicador
tit_ind <- sapply(pg_a, function(x) stringr::str_match(as.character(x), conf$tit_p)[,2])
tit_ind <- unique(tit_ind[!is.na(tit_ind)])
### Lee atributos 'href'(ruta de la tabla)
href <- rvest::html_attr(pg_a, "href")
href <- href[!is.na(href)]
href <- href[nchar(href)>1]
href <- grep(conf$tabpx, href, value = TRUE)
### Extrae nombre del archivo .csv
file <- unique(stringr::str_match(href, conf$file_p)[,2])
file <- file[!is.na(file)]
file <- paste0(file, ".csv")
### Genera url para .csv
url_3 <- paste0(unique(stringr::str_match(href, conf$pre_p)[,2]), "/")
base_url <- paste0(conf$url_1, conf$url_2, url_3)
myurl <- paste0(base_url, file, conf$suf_url)
file
myurl
tit_ind
### Nombre de archivos .csv
file <- mefd_name(url_web=url_web, config = conf)
file
myurl <- mefd_url(url_web=url_web)
myurl
### tibble metadata
df <- data.frame(tit_ind, file, myurl, tit)
tit_ind
file
list(tit_ind, file, myurl, tit)
### tibble metadata
df <- data.frame(tit_ind, file, myurl, tit)
help("tryCatch")
tryCatch(data.frame(tit_ind, file, myurl, tit))
tryCatch(data.frame(tit_ind, file, myurl, tit), error = function(e) NA)
tryCatch(data.frame(tit_ind, file, myurl, tit), error = function(e) list(tit_ind, file, myurl, tit))
# enlace url con indicadores
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-porcen-gen&file=pcaxis&l=s0"
url_web = mi_url
pg <- read_html(url_web)
### Titulo de la pagina web
tit <- rvest::html_elements(pg, "h1")
tit <- trimws(rvest::html_text(tit))
### Nodos <a
pg_a <- rvest::html_elements(pg, "a")
### Titulo de base de datos del indicador
tit_ind <- sapply(pg_a, function(x) stringr::str_match(as.character(x), conf$tit_p)[,2])
tit_ind <- unique(tit_ind[!is.na(tit_ind)])
### Lee atributos 'href'(ruta de la tabla)
href <- rvest::html_attr(pg_a, "href")
href <- href[!is.na(href)]
href <- href[nchar(href)>1]
href <- grep(conf$tabpx, href, value = TRUE)
### Extrae nombre del archivo .csv
file <- unique(stringr::str_match(href, conf$file_p)[,2])
file <- file[!is.na(file)]
file <- paste0(file, ".csv")
### Genera url para .csv
url_3 <- paste0(unique(stringr::str_match(href, conf$pre_p)[,2]), "/")
base_url <- paste0(conf$url_1, conf$url_2, url_3)
myurl <- paste0(base_url, file, conf$suf_url)
### Nombre de archivos .csv
file <- mefd_name(url_web=url_web, config = conf)
myurl <- mefd_url(url_web=url_web)
tryCatch(data.frame(tit_ind, file, myurl, tit), error = function(e) list(tit_ind, file, myurl, tit))
mefd_meta <- function(url_web, config = conf) {
pg <- read_html(url_web)
### Titulo de la pagina web
tit <- rvest::html_elements(pg, "h1")
tit <- trimws(rvest::html_text(tit))
### Nodos <a
pg_a <- rvest::html_elements(pg, "a")
### Titulo de base de datos del indicador
tit_ind <- sapply(pg_a, function(x) stringr::str_match(as.character(x), conf$tit_p)[,2])
tit_ind <- unique(tit_ind[!is.na(tit_ind)])
### Nombre de archivos .csv
file <- mefd_name(url_web=url_web, config = conf)
myurl <- mefd_url(url_web=url_web)
### tibble metadata
df <- data.frame(tit_ind, file, myurl, tit)
names(df) <- c("indicador", "archivo", "url", "titulo")
return(df)
}
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-porcen-gen&file=pcaxis&l=s0"
mi_meta <- mefd_meta(url_web = mi_url)
library("rvest")
mi_meta <- mefd_meta(url_web = mi_url)
library("mefdind")
mi_meta <- mefd_meta(url_web = mi_url)
View(mi_meta)
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages("mefdind")
library("devtools")
install_github("eldafani/mefdind")
library(mefdind)
roxygen2::roxygenise()
library("mefdind")
mi_url <- "https://estadisticas.educacion.gob.es/EducaDynPx/educabase/index.htm?type=pcaxis&path=/no-universitaria/alumnado/matriculado/series/gen-porcen-gen&file=pcaxis&l=s0"
df <- mefd_read(url_web = mi_url)
mi_meta <- mefd_meta(url_web = mi_url)
mi_meta$indicador[1]
### Series temporales
serie <- df[[1]]
View(serie)
View(serie)
table(serie$periodo)
class(serie$periodo)
library("tidyverse")
ggplot(serie, aes(x= periodo, y = Total)) +
geom_point() +
geom_line() +
facet_wrap(~Comunidad.autónoma)
View(serie)
help("facet_wrap")
ggplot(serie, aes(x= periodo, y = Total)) +
geom_point() +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free")
ggplot(serie, aes(x= periodo, y = Total)) +
geom_point() +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free_x")
ggplot(serie, aes(x= periodo, y = Total)) +
geom_point() +
facet_wrap(~Comunidad.autónoma, scales = "free_x")
ggplot(serie, aes(x= periodo, y = Total)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free_x")
ggplot(serie, aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free_x")
ggplot(serie, aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free")
ggplot(serie, aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
filter(serie, Comunidad.autónoma == "Canarias")
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_bw()
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
xlab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(serie, aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free") +
xlab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
xlab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_smooth(method = "loess") +
xlab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_smooth(method = "loess", se = FALSE) +
xlab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
xlab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(serie, aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free") +
xlab("") +
ylab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filter(serie, Comunidad.autónoma == "Canarias"),
aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
xlab("") +
ylab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(serie, aes(x= periodo, y = Total, group = Comunidad.autónoma)) +
geom_line() +
facet_wrap(~Comunidad.autónoma, scales = "free") +
xlab("") +
ylab("") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
